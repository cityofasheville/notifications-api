version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.6.0
  aws-ecs: circleci/aws-ecs@1.0.4

jobs:
  deploy: &deploy
    docker:
      - image: circleci/python:3.7.1
    steps:
      - checkout
      - aws-ecr/build-and-push-image:
          account-url: ECR_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          region: AWS_DEFAULT_REGION
          repo: 'coa-notificationsapi'
          extra-build-args: '--build-arg sessionName=${SESSION_NAME}/
                 --build-arg sessionSecret=${SESSION_SECRET}/
                 --build-arg maxSessionDays=${MAX_SESSION_DAYS}/
                 --build-arg cache_method=${CACHE_METHOD}/
                 --build-arg region=${AWS_DEFAULT_REGION}/
                 --build-arg userpoolId=${USER_POOL_ID}/
                 --build-arg appClientId=${APP_CLIENT_ID}/
                 --build-arg cognitoOauthUrl=${COGNITO_OAUTH_URL}/
                 --build-arg mds_host=${MDS_HOST}/
                 --build-arg mds_user=${MDS_USER}/
                 --build-arg mds_password=${MDS_PASSWORD}/
                 --build-arg mds_database=${MDS_DATABASE}/
                 --build-arg note_host=${NOTE_HOST}
                 --build-arg note_user=${NOTE_USER}/
                 --build-arg note_password=${NOTE_PASSWORD}/
                 --build-arg note_database=${NOTE_DATABASE}'
          tag: '${CIRCLE_SHA1}'
      - aws-ecs/deploy-service-update:
          aws-region: AWS_DEFAULT_REGION
          family: 'prodreviewsapi'
          service-name: 'prod-reviewsapi'
          cluster-name: 'dev_reviewsapi_ecs_cluster'
          container-image-name-updates: 'container=reviewsapi,tag=${CIRCLE_SHA1}'
          verify-revision-is-deployed: true
          max-poll-attempts: 30
          poll-interval: 60
  deploy-production:
    <<: *deploy
  deploy-staging:
    <<: *deploy

workflows:
  build-image-and-push:
    jobs:
      - deploy-development:
          filters:
            branches:
              only:
                - development
          context: notifications-development

      - deploy-production:
          filters:
            branches:
              only:
                - master
          context: notifications-production
          type: approval
